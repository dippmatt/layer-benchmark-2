BTW: Um tflite native zu benchmarken, einfach in MXCube auf tflite runtime umstellen (bei software packs auf system performance gestellt) und am board laufen lassen, dann bekommt man auch die layer zeiten angezeigt.


Installation:
Anleitung für python des tutorials folgen: https://github.com/mit-han-lab/tinyengine/tree/main/tutorial/inference

Ich habe in ./tinyengine/examples/custom_tflite.py ein custom file zur generierung der Modellfiles erstellt.
Die generierten files sind dann in [pwd]/tinyengine/codegen/ zu finden.

Danach alle Datein in ein neues cube project kopiert mithilfe des beiliegenden python Skript: copy_cmsis.py
Command:

Des weiteren müssen die Include Paths im Tinyengine Projekt angepasst werden:
../Core/Src/TinyEngine/src/arm_cmsis/ActivationFunctions
../Core/Src/TinyEngine/src/arm_cmsis/BasicMathFunctions
../Core/Src/TinyEngine/src/arm_cmsis/ConcatenationFunctions
../Core/Src/TinyEngine/src/arm_cmsis/ConvolutionFunctions
../Core/Src/TinyEngine/src/arm_cmsis/FullyConnectedFunctions
../Core/Src/TinyEngine/src/arm_cmsis/NNSupportFunctions
../Core/Src/TinyEngine/src/arm_cmsis/PoolingFunctions
../Core/Src/TinyEngine/src/arm_cmsis/ReshapeFunctions
../Core/Src/TinyEngine/src/arm_cmsis/SoftmaxFunctions
../Core/Src/TinyEngine/src/arm_cmsis/SVDFunctions
../Core/Src/TinyEngine/include
../Core/Src/TinyEngine/include/arm_cmsis
../Core/Src/TinyEngine/codegen/Include

../Core/Src
../Core/Inc
../Drivers/STM32L4xx_HAL_Driver/Inc
../Drivers/STM32L4xx_HAL_Driver/Inc/Legacy
../Drivers/CMSIS/Device/ST/STM32L4xx/Include
../Drivers/CMSIS/Include

!Wichtig!: die CMSIS (nicht CMSIS-NN sondern stinknormale CMSIS) library sollte exakt die sein, die im Tinyengine repo vorhanden ist. 
Fur Cortex M4 ersete man dafür den Ordner <cube projekt>/Drivers/CMSIS/Include mit  <tinyengine repo>/third_party/CMSIS/CMSIS/Core/Include

python3 copy_cmsis.py  -cube_prj_path /home/matthias/Documents/BA/no_git_layer_benchmark/layer-benchmark-scripting/tinyengine/cubeproject/test/TestProject/ -tinyengine_path /home/matthias/Documents/BA/no_git_layer_benchmark/layer-benchmark-scripting/tinyengine/tinyengine 

Achtung: weil tinyengine als default example Cortex M7 verwendet, müssen die libraries auf M4 geändert werden (zb. in profile.h)


Scripting environment laufen lassen:
AD

KWS

IC

VWW


